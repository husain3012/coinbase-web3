import Head from "next/head";
import factoryInstance from "../ethereum/factory";
import { useEffect, useState } from "react";
import { Card, Button, Divider } from "semantic-ui-react";
import Link from "next/link";
import Layout from "../components/Layout";

export default function Home({ campaigns }) {
  const campaignCard = campaigns.map((address) => ({
    header: address,
    description: <Link href={`/campaigns/${address}`}>View Campaign</Link>,
    fluid: true,
  }));

  return (
    <Layout>
      <Head>
        <title>Coin Base</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h3>Campaigns</h3>
      <Link href="/campaigns/new">
        <Button floated="right" content="Create Campaign" icon="add circle" primary labelPosition="left" />
      </Link>
      <Card.Group items={campaignCard} />
      <Divider />
      <Card fluid>
        <Card.Content>
          <Card.Header>About</Card.Header>
          <Card.Meta>
            <span className="date">What is coinbase?</span>
          </Card.Meta>
          <Card.Description>
            <p>
              Coinbase is a decentralized application that allows users to create and manage campaigns. <br />
              Want to raise funds for your next project? Create a campaign and get started!
              <br />
              Or donate to the projects you want to support!
            </p>
            <p>
              <strong>You need to have metamask installed use this application!</strong>
            </p>
          </Card.Description>
        </Card.Content>
      </Card>
      <Card fluid>
        <Card.Content>
          <Card.Header>How it works?</Card.Header>
          <Card.Meta>
            <span className="date">A bit like kickstarter but more!</span>
          </Card.Meta>
          <Card.Description>
            <ul>
              <li>You create a campaign, with a minimum amount a user can contribute.</li>
              <li>Whenever a user contributes to your campaign, they are added as an approver for any payment request you make.</li>
              <li>Need to use some amount of money you raised in a transaction? You can do so by making a &apos;Payment Request&apos;</li>
              <li>You do this by mentioning the amount you want to transact, the address of the user you want to transact to, and of course,the reason for the transaction.</li>
              <li>Your approvers can then vote on either to deny or allow your payment request. If the the majority approvers, you can confirm the transaction</li>
              <li>If majority decides to deny the request, you might wanna explain your cause a bit more thoroughly, its their money after all!</li>
            </ul>
          </Card.Description>
        </Card.Content>
      </Card>
    </Layout>
  );
}

Home.getInitialProps = async () => {
  const campaigns = await factoryInstance.methods.getDeployedCampaigns().call();
  return { campaigns };
};
